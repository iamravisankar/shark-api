name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    types:
      - opened
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: node:16-alpine

    services:
      postgres:
        image: postgres:12-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: starter
          POSTGRES_PASSWORD: starter

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn run lint

      - name: Migrate database
        run: yarn run db:migrate
        env:
          NODE_ENV: test
          DB_NAME: starter
          DB_USER: postgres
          DB_PASSWORD: starter
          DB_HOST: postgres

      - name: Build
        run: yarn run build

      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: deploy_dist
          path: dist

      - name: Copy files to the server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          source: "dist/*"
          target: "/home/ubuntu/shark-api"

      - name: SSH deploy commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            cd /home/ubuntu/shark-api
            npm install --production
            pm2 restart shark-api || pm2 start npm --name "shark-api" -- run start
